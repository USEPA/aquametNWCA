% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/VegType_GrdCover_functions.r
\name{calcSandTMets}
\alias{calcSandTMets}
\title{Calculate metrics based on S&T (Status and Trends) categories}
\usage{
calcSandTMets(dataIn, nPlot, sampID = "UID")
}
\arguments{
\item{dataIn}{A data frame containing the following variables:
\itemize{
\item sampID: Variables identified in \emph{sampID} argument

\item PLOT: Sample plot from which data were collected

\item PARAMETER: specific measurement type

\item RESULT: measured value
}
The following parameters are used in calculating
vegetation type metrics: 'SANDT_CLASS', 'PAL_FARMED'.
Additional parameters or variables are ignored.}

\item{nPlot}{Number of plots sampled associated with
each samples, with \emph{sampID} variables and NPLOTS}

\item{sampID}{A character vector containing the name(s) of
variable(s) necessary to identify unique samples, 'UID'
by default.}
}
\value{
Either a character string containing an error message when metric
  calculation is not successful, or a data frame. Data frame contains
  \emph{sampID} variables, PARAMETER, RESULT, where values of PARAMETER 
  consist of the metric name concatenated with trait value, with valid values
  of: N_SANDT, DOM_SANDT, D_SANDT, H_SANDT, J_SANDT. A list of metric
  descriptions is provided in the document named 
  VegTypes_GrdCover_Metric_Descriptions.pdf included in the help directory
  for the package.
}
\description{
This function calculations metrics based on the
number of S&T classes found across plots. This function is called by
calcVtype_GcovMets().
}
\details{
If any of the parameters are missing, they are assumed
to be zeros (if numeric), and metric values associated with any
metrics that cannot be calculated due to missing parameters are
set to a standardized value.
}
\examples{
head(Vtype_GrCovEx)
# Create data frame with number of plots sampled for each sampID
nplots <- data.frame(UID=seq(1:10),NPLOTS=rep(5,10),stringsAsFactors=F)
# alternative approach to creating this data frame
nplots <- plyr::ddply(Vtype_GrCovEx,c('UID'),dplyr::summarise
,NPLOTS=length(unique(PLOT)))

sandtEx <- calcSandTMets(Vtype_GrCovEx,nplots)

head(sandtEx)
unique(sandtEx$PARAMETER)
}
\author{
Karen Blocksom \email{blocksom.karen@epa.gov}
}
